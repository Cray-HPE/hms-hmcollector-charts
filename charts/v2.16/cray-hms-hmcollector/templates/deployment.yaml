---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cray-hms-hmcollector-ingress
  labels:
    app.kubernetes.io/name: cray-hms-hmcollector-ingress
spec:
  replicas: {{ .Values.collectorIngressConfig.replicas}}
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: cray-hms-hmcollector-ingress
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cray-hms-hmcollector-ingress
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "8082,9092,2181"
        {{- if .Values.podAnnotations }}
        {{- .Values.podAnnotations | toYaml | nindent 8 -}}
        {{- end }}
    spec:
      containers:
        - name: cray-hms-hmcollector-ingress
          image: {{ .Values.image.repository }}:{{ default .Values.global.appVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "{{ .Values.collectorIngressConfig.logLevel}}"

            - name: POLLING_ENABLED
              value: "{{ .Values.collectorIngressConfig.pollingEnabled }}"
            - name: POLLING_INTERVAL
              value: "{{ .Values.collectorIngressConfig.pollingInterval }}"

            - name: RF_SUBSCRIBE_ENABLED
              value: "{{ .Values.collectorIngressConfig.redfishSubscribeEnabled }}"
            - name: RF_STREAMING_ENABLED
              value: "{{ .Values.collectorIngressConfig.redfishStreamingEnabled }}"
            - name: REST_ENABLED
              value: "{{ .Values.collectorIngressConfig.restEnabled }}"

            - name: HSM_REFRESH_INTERVAL
              value: "{{ .Values.collectorIngressConfig.hsmRefreshInterval }}"
            - name: SM_URL
              value: "http://cray-smd"

            - name: REST_URL
              value: "http://{{ .Values.hmcollector_external_ip }}"

            - name: VAULT_ENABLED
              value: "{{ .Values.collectorIngressConfig.vaultEnabled }}"
            - name: VAULT_ADDR
              value: "http://cray-vault.vault:8200"
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_KEYPATH
              value: "secret/hms-creds"
            - name: HMCOLLECTOR_CA_URI
              value: "{{ .Values.hms_ca_uri }}"
#            - name: HMCOLLECTOR_LOG_INSECURE_FAILOVER
#              value: true
          ports:
            - containerPort: 80
              name: hmc-insecure
            - containerPort: 443
              name: hmc-secure
          livenessProbe:
            httpGet:
              path: /liveness
              port: hmc-insecure
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readiness
              port: hmc-insecure
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: hms-hmcollector-kafka-brokers
              mountPath: /configs/kafka_brokers.json
              readOnly: true
              subPath: kafka_brokers.json
            - name: cray-pki-cacert-vol
              mountPath: /usr/local/cray-pki
          resources:
            {{- .Values.collectorIngressConfig.resources | toYaml | nindent 12 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - cray-hms-hmcollector-ingress
      volumes:
        - name: hms-hmcollector-kafka-brokers
          configMap:
            name: hms-hmcollector-kafka-brokers
        - name: cray-pki-cacert-vol
          configMap:
            name: cray-configmap-ca-public-key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cray-hms-hmcollector-poll
  labels:
    app.kubernetes.io/name: cray-hms-hmcollector-poll
spec:
  replicas: {{ .Values.collectorPollConfig.replicas}}
  selector:
    matchLabels:
      app.kubernetes.io/name: cray-hms-hmcollector-poll
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cray-hms-hmcollector-poll
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "8082,9092,2181"
        {{- if .Values.podAnnotations }}
        {{- .Values.podAnnotations | toYaml | nindent 8 -}}
        {{- end }}
    spec:
      containers:
        - name: cray-hms-hmcollector
          image: {{ .Values.image.repository }}:{{ default .Values.global.appVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "{{ .Values.collectorPollConfig.logLevel}}"

            - name: POLLING_ENABLED
              value: "{{ .Values.collectorPollConfig.pollingEnabled }}"
            - name: POLLING_INTERVAL
              value: "{{ .Values.collectorPollConfig.pollingInterval }}"

            - name: RF_SUBSCRIBE_ENABLED
              value: "{{ .Values.collectorPollConfig.redfishSubscribeEnabled }}"
            - name: RF_STREAMING_ENABLED
              value: "{{ .Values.collectorPollConfig.redfishStreamingEnabled }}"
            - name: REST_ENABLED
              value: "{{ .Values.collectorPollConfig.restEnabled }}"

            - name: PRUNE_OLD_SUBSCRIPTIONS:
              value: "{{ .Values.collectorPollConfig.pruneOldSubscriptions }}"

            - name: HSM_REFRESH_INTERVAL
              value: "{{ .Values.collectorPollConfig.hsmRefreshInterval }}"
            - name: SM_URL
              value: "http://cray-smd"

            - name: REST_URL
              value: "http://{{ .Values.hmcollector_external_ip }}"

            - name: VAULT_ENABLED
              value: "{{ .Values.collectorPollConfig.vaultEnabled }}"
            - name: VAULT_ADDR
              value: "http://cray-vault.vault:8200"
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_KEYPATH
              value: "secret/hms-creds"
            - name: HMCOLLECTOR_CA_URI
              value: "{{ .Values.hms_ca_uri }}"
#            - name: HMCOLLECTOR_LOG_INSECURE_FAILOVER
#              value: true
          ports:
            - containerPort: 80
              name: hmc-insecure
            - containerPort: 443
              name: hmc-secure
          livenessProbe:
            httpGet:
              path: /liveness
              port: hmc-insecure
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readiness
              port: hmc-insecure
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: hms-hmcollector-kafka-brokers
              mountPath: /configs/kafka_brokers.json
              readOnly: true
              subPath: kafka_brokers.json
            - name: cray-pki-cacert-vol
              mountPath: /usr/local/cray-pki
          resources:
            {{- .Values.collectorPollConfig.resources | toYaml | nindent 12 }}
      volumes:
        - name: hms-hmcollector-kafka-brokers
          configMap:
            name: hms-hmcollector-kafka-brokers
        - name: cray-pki-cacert-vol
          configMap:
            name: cray-configmap-ca-public-key
